version: '3.8'
services:
#  database:
#    container_name: api_database
#    image: 'mariadb:focal'
#    ports:
#      - '4306:3306'
#    environment:
#      - MYSQL_ROOT_PASSWORD=root
#      - MYSQL_USER=root
#      - MYSQL_PASSWORD=root
#      - MYSQL_DATABASE=casasdap_casas
#    cap_add:
#      - SYS_NICE
#    volumes:

#      - '/home/led/Dropbox/mariadbCasasApi/var/lib/mysql:/var/lib/mysql'
#      - './docker/mysql/docker-entrypoint-initdb.d:/test'
  php:
    restart: always
    container_name: api_php
    build:
      context: ./docker/php
    ports:
      - '9000:9000'
    volumes:
      - ./:/var/www/symfony_docker
    environment:
      # See https://docs.docker.com/docker-for-mac/networking/#i-want-to-connect-from-a-container-to-a-service-on-the-host
      # See https://github.com/docker/for-linux/issues/264
      # The `client_host` below may optionally be replaced with `discover_client_host=yes`
      # Add `start_with_request=yes` to start debug session on each request
      XDEBUG_CONFIG: >-
        client_host=host.docker.internal client_port=9003 start_with_request=yes
      XDEBUG_MODE: debug
      # This should correspond to the server declared in PHPStorm `Preferences | Languages & Frameworks | PHP | Servers`
      # Then PHPStorm will use the corresponding path mappings
      PHP_IDE_CONFIG: serverName=symfony
    extra_hosts:
      # Ensure that host.docker.internal is correctly defined on Linux
      - host.docker.internal:host-gateway
    command: composer install --ignore-platform-reqs
    networks:
      - internal
#    depends_on:
#      - database
  nginx:
    container_name: api_nginx
    build:
      context: ./docker/nginx
    ports:
      - '8085:80'
    volumes:
      - ./:/var/www/symfony_docker
      - ./docker/nginx/conf.d/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - php
 #    - database
    networks:
      - internal

networks:
  internal:
    driver: bridge